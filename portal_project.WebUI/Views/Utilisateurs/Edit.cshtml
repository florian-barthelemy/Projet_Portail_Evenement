@model portal_project.ViewModels.UserAdresseViewModel
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => Model.Adresse.Id)
<div class="form-horizontal">
    <h4>Utilisateur</h4>
    <hr />
    <p class="text-danger small">@ViewBag.error</p>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.User.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 ">
            @Html.EditorFor(model => model.User.Nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Nom, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.User.Prenom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 ">
            @Html.EditorFor(model => model.User.Prenom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Prenom, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.User.UserGenre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 ">
            @Html.EnumDropDownListFor(model => model.User.UserGenre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Prenom, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.User.DateNais, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 ">
            @Html.EditorFor(model => model.User.DateNais, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.DateNais, "", new { @class = "text-danger", mode = "Date" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Adresse.Voie, "Adresse", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adresse.Voie, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adresse.Voie, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Adresse.Ville, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adresse.Ville, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adresse.Ville, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Adresse.CodePostal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adresse.CodePostal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adresse.CodePostal, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Session["User"] != null && (Session["User"] as portal_project.ViewModels.UserLogViewModel).IsAdmin)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.User.IsAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.IsAdmin, new { htmlAttributes = new { @class = "form-control", @width = "100", value = Model.User.Password } })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => Model.User.IsAdmin)
    }
    <div class="form-group">
        @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control", @width = "100", value = Model.User.Password } })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("ConfirmPassword", "Confirmer mot de passe", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Password("ConfirmPassword", Model.User.Password, new { @class = "form-control", @width = "100" })
            <p class="text-danger small">@ViewBag.errorPassword</p>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-4 col-md-offset-2">
                @Html.ActionLink("Annuler les changements", "Details", new { id = Model.User.Id })
            </div>
            <div class="col-md-4 col-md-offset-2">
                <input type="submit" value="Sauvegarder les changements" class="btn rounded-pill border border-dark bg-navbar " />
            </div>
        </div>
    </div>
</div>
}


